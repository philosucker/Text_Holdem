직렬포트 : 데이터를 한 번에 1비트씩 보낼 수 있는 연결장치. 프린터나 모뎀 같은 주변기기를 연결하거나 통신하는 용도로 쓰임
직렬포트로 주변기기 대신 컨 두 대를 연결해 서로 통신도 가능
고리형태로 직렬포트를 써서 컴을   연결하면 일조으이 네트워크 토폴로지로 볼 수 있긴 하다 (6장)

LAN (local area netword) 근거리 통신망 : 직렬포트도 일종의 근거리 통신망. 본격적인 랜은 이더넷 Ethernet을 말한다.

레이턴시 : 네트워크로 데이터를 전송하면서 발생하는 시간 지연 (7장, 8장)

모바일 플랫폼에서 멀티플레이어 게임은 대개 비동기식으로 구현
턴제 방식으로 기획된 게임이 비동기식 멀티 플레이를 채용
비동기식 멀티플레이 모델에선 데이터를 실시간으로 전송할 필요가 없다.
이 방식에선 플레이어의 차례가 되면 알림이 뜨며 시간을 넉넉히 갖고 그 턴을 플레이할 수 있다.
비동기 네트워크 게임은 실시간 네트워크 게임보다 구현이 쉽다.
모바일의 경우 플랫폼 API단에서 이미 비동기 통신수단을 구비하여 제공한다.



네트워크 게임을 설계할 때 가장 먼저 정해둘 것은 통신 프로토콜 이다.
프로토콜이란 두 대의 컴퓨터 사이에 어떤 데이터가 오고 갈지를 정해둔 규약 
(2장 참고, 3장에선 프로토콜을 제어하는데 가장 널리 쓰이는 라이브러리인 버클리 소켓을 살펴본다)



P2P 모델은 각각의 플레이어가 모든 플레이어와 연결을 유지해야 한다
CS 모델은 모든 플레이어가 중앙서버 하나에 접속한다.
P2P 모델은 O(n**2) 의 대역폭이 필요하다. 이는 사용자 수의 제곱에 비례해 대역폭이 소모된다는 뜻이다
사용자수가 128명 이라면, 주어진 대역폭을 16384로 나눠 써야 하는 셈이다.
CS 로 구성하면, 각 플레이어에 할당되는 대역은 상수로 고정되며, 서버만 O(n) 대역폭을 처리하면 된다.
이는 서버가 들어오는 연결을 모두 받아줄 수 있을 정도로 강력해야함을 뜻한다.



2장 인터넷

서킷스위칭
패킷스위칭 : 패킷이라는 작은 뭉치들로 나뉜 송수신 내용들이, 네트워크의 각 노드를 거치며 목적지로 전송되는 형태. 
각각의 노드는 수신한 패킷을 저장하고, 이후 목적지에 가까운 다른 노드로 전달한다.

패킷스위칭 자체는 추상화된 개념에 불과하므로
이를 구체화하기 위해
네트워크의 각 노드가 어떻게 패킷을 꾸릴지
어떻게 패킷을 네트워크를 통해 보낼지를  정형화해둔 프로토콜이 필요하다
이 프로토콜들을 통칭해 TCP/IP stack(suite) 라고 부른다.


6장 네트워크 토폴로지와 예제 게임

네트워크 토폴로지 : 여러 컴퓨터가 네트워크상 연결되어 있는 양태
프로토콜 마다 장단점이 있는 것처럼, 토폴로지마다 장단점이 있다.6
